/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	__webpack_require__(2);
	__webpack_require__(3);
	__webpack_require__(4);
	__webpack_require__(12);
	__webpack_require__(13);
	__webpack_require__(7);
	__webpack_require__(9);
	__webpack_require__(10);
	__webpack_require__(14);
	__webpack_require__(15);
	__webpack_require__(16);
	__webpack_require__(17);
	__webpack_require__(11);
	__webpack_require__(6);
	__webpack_require__(18);
	__webpack_require__(19);
	__webpack_require__(8);
	module.exports = __webpack_require__(5);


/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";
	function furtherAngularSetup(app) {
	    // including show-tab in there, I find this useful for angular
	    app.directive('showTab', function () {
	        return {
	            link: function (scope, element, attrs) {
	                element.click(function (e) {
	                    e.preventDefault();
	                    $(element).tab('show');
	                });
	            }
	        };
	    });
	}
	exports.furtherAngularSetup = furtherAngularSetup;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	var HttpExecute = (function () {
	    function HttpExecute(httpService) {
	        this.httpPost = "POST";
	        this.httpService = httpService;
	    }
	    HttpExecute.prototype.performPost = function (url, data, onSuccess, onError) {
	        this.httpService({
	            url: url,
	            method: this.httpPost,
	            data: data
	        }).success(onSuccess)
	            .error(onError);
	    };
	    return HttpExecute;
	}());
	exports.HttpExecute = HttpExecute;


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// THIS FILE WAS AUTO-GENERATED. DO NOT ALTER!
	/// <reference path="../node_modules/roylance.common/bytebuffer.d.ts" />
	var BusinessManagerModelFactory_1 = __webpack_require__(4);
	var YadelModelFactory_1 = __webpack_require__(5);
	var YaasModelFactory_1 = __webpack_require__(6);
	var MainService_1 = __webpack_require__(7);
	var ReportService_1 = __webpack_require__(8);
	var AdminService_1 = __webpack_require__(9);
	var AuthenticationService_1 = __webpack_require__(10);
	var UserDeviceService_1 = __webpack_require__(11);
	var HttpExecute_1 = __webpack_require__(2);
	var FurtherAngularSetup_1 = __webpack_require__(1);
	var app = angular.module('jsapp', [
	    "ngRoute"
	]);
	app.factory("httpExecute", function ($window, $http) {
	    return new HttpExecute_1.HttpExecute($http);
	});
	app.factory("businessManagerModel", function () {
	    return BusinessManagerModelFactory_1.BusinessManagerModel.com.revolutionlandscaping.businessmanager;
	});
	app.factory("yadelModel", function () {
	    return YadelModelFactory_1.YadelModel.org.roylance.yadel;
	});
	app.factory("yaasModel", function () {
	    return YaasModelFactory_1.YaasModel.org.roylance.yaas;
	});
	app.factory("mainService", function (httpExecute, businessManagerModel) {
	    return new MainService_1.MainService(httpExecute, businessManagerModel);
	});
	app.factory("reportService", function (httpExecute, yadelModel) {
	    return new ReportService_1.ReportService(httpExecute, yadelModel);
	});
	app.factory("adminService", function (httpExecute, yaasModel) {
	    return new AdminService_1.AdminService(httpExecute, yaasModel);
	});
	app.factory("authenticationService", function (httpExecute, yaasModel) {
	    return new AuthenticationService_1.AuthenticationService(httpExecute, yaasModel);
	});
	app.factory("userDeviceService", function (httpExecute, yaasModel) {
	    return new UserDeviceService_1.UserDeviceService(httpExecute, yaasModel);
	});
	FurtherAngularSetup_1.furtherAngularSetup(app);


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	/// <reference path="./BusinessManagerModel.d.ts" />
	var _root = dcodeIO.ProtoBuf.newBuilder({})['import']({
	    "package": "com.revolutionlandscaping.businessmanager",
	    "messages": [
	        {
	            "name": "Account",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "first_name",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "last_name",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "address",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "city",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "state",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "zip",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "phone",
	                    "id": 8
	                }
	            ]
	        },
	        {
	            "name": "Employee",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "first_name",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "last_name",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "double",
	                    "name": "hourly_rate",
	                    "id": 4
	                }
	            ]
	        },
	        {
	            "name": "Job",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "account_id",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "date",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "description",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "double",
	                    "name": "fixed_price",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "double",
	                    "name": "hourly_rate",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "double",
	                    "name": "hours",
	                    "id": 7
	                }
	            ]
	        },
	        {
	            "name": "UIBusinessManagerRequest",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "token",
	                    "id": 1
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Account",
	                    "name": "accounts",
	                    "id": 2
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Employee",
	                    "name": "employees",
	                    "id": 3
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Job",
	                    "name": "jobs",
	                    "id": 4
	                }
	            ]
	        },
	        {
	            "name": "UIBusinessManagerResponse",
	            "fields": [
	                {
	                    "rule": "repeated",
	                    "type": "Account",
	                    "name": "accounts",
	                    "id": 1
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Employee",
	                    "name": "employees",
	                    "id": 2
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Job",
	                    "name": "jobs",
	                    "id": 3
	                }
	            ]
	        },
	        {
	            "name": "CommonAction",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "UIBusinessManagerRequest",
	                    "name": "request",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIBusinessManagerResponse",
	                    "name": "response",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "MainController",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "get_accounts",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "save_accounts",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "delete_accounts",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "get_employees",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "save_employees",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "delete_employees",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "get_jobs",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "save_jobs",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "delete_jobs",
	                    "id": 9
	                }
	            ]
	        }
	    ]
	}).build();
	exports.BusinessManagerModel = _root;


/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";
	/// <reference path="./YadelModel.d.ts" />
	var _root = dcodeIO.ProtoBuf.newBuilder({})['import']({
	    "package": "org.roylance.yadel",
	    "messages": [
	        {
	            "name": "UIYadelRequest",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "UIYadelRequestType",
	                    "name": "request_type",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "dag_id",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "token",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_name",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "password",
	                    "id": 5
	                }
	            ]
	        },
	        {
	            "name": "UIYadelResponse",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "content",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIDagReport",
	                    "name": "report",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIDag",
	                    "name": "dag",
	                    "id": 3
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UIWorkerConfiguration",
	                    "name": "configurations",
	                    "id": 4
	                }
	            ]
	        },
	        {
	            "name": "UIDagReport",
	            "fields": [
	                {
	                    "rule": "repeated",
	                    "type": "UIWorkerConfiguration",
	                    "name": "workers",
	                    "id": 1
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UIDag",
	                    "name": "dags",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "used_manager_memory",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "total_manager_memory",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "active_dags",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "unprocessed_dags",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "saved_dags",
	                    "id": 7
	                }
	            ]
	        },
	        {
	            "name": "UIDag",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 2
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UINode",
	                    "name": "nodes",
	                    "id": 3
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UIEdge",
	                    "name": "edges",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_completed",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_processing",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_error",
	                    "id": 7
	                },
	                {
	                    "rule": "repeated",
	                    "type": "string",
	                    "name": "logs",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "number_completed",
	                    "id": 9
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "number_processing",
	                    "id": 10
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "number_errored",
	                    "id": 11
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "number_unprocessed",
	                    "id": 12
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UIDag",
	                    "name": "children",
	                    "id": 13
	                }
	            ]
	        },
	        {
	            "name": "UIEdge",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "node_id_1",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "node_id_2",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "UINode",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "execution_date",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "start_date",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "end_date",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "duration",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_completed",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_processing",
	                    "id": 9
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_error",
	                    "id": 10
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UILog",
	                    "name": "logs",
	                    "id": 11
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_waiting_for_another_dag_task",
	                    "id": 12
	                }
	            ]
	        },
	        {
	            "name": "UILog",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "message",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "UIWorkerConfiguration",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "ip",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "port",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "host",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "initialized_time",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIWorkerState",
	                    "name": "state",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "task_display",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "dag_display",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "uint64",
	                    "name": "minutes_before_task_reset",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "task_start_time",
	                    "id": 9
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "task_working_time_display",
	                    "id": 10
	                }
	            ]
	        },
	        {
	            "name": "CommonAction",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "UIYadelRequest",
	                    "name": "request",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIYadelResponse",
	                    "name": "response",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "ReportController",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "delete_dag",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "current",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "CommonAction",
	                    "name": "get_dag_status",
	                    "id": 3
	                }
	            ]
	        },
	        {
	            "name": "WorkerConfiguration",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "ip",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "port",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "host",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "initialized_time",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "WorkerState",
	                    "name": "state",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "Task",
	                    "name": "task",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "Dag",
	                    "name": "dag",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "uint64",
	                    "name": "minutes_before_task_reset",
	                    "id": 9
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "task_start_time",
	                    "id": 10
	                }
	            ]
	        },
	        {
	            "name": "Log",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "message",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "Dag",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 2
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Task",
	                    "name": "flattened_tasks",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "execution_date",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "start_date",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "end_date",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "duration",
	                    "id": 7
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Task",
	                    "name": "uncompleted_tasks",
	                    "id": 8
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Task",
	                    "name": "processing_tasks",
	                    "id": 9
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Task",
	                    "name": "errored_tasks",
	                    "id": 10
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Task",
	                    "name": "completed_tasks",
	                    "id": 11
	                },
	                {
	                    "rule": "optional",
	                    "type": "Dag",
	                    "name": "parent",
	                    "id": 12
	                }
	            ]
	        },
	        {
	            "name": "Task",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 2
	                },
	                {
	                    "rule": "repeated",
	                    "type": "TaskDependency",
	                    "name": "dependencies",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "dag_id",
	                    "id": 4
	                },
	                {
	                    "rule": "repeated",
	                    "type": "Log",
	                    "name": "logs",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "execution_date",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "start_date",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "end_date",
	                    "id": 8
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "duration",
	                    "id": 9
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "first_context_base_64",
	                    "id": 10
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "second_context_base_64",
	                    "id": 11
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "third_context_base_64",
	                    "id": 12
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_waiting_for_another_dag_task",
	                    "id": 13
	                }
	            ]
	        },
	        {
	            "name": "TaskDependency",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "parent_task_id",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "AddTaskToDag",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "Task",
	                    "name": "parent_task",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "Task",
	                    "name": "new_task",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "first_context_base_64",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "second_context_base_64",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "third_context_base_64",
	                    "id": 6
	                }
	            ]
	        },
	        {
	            "name": "CompleteTask",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "Task",
	                    "name": "task",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "WorkerConfiguration",
	                    "name": "worker_configuration",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_error",
	                    "id": 5
	                }
	            ]
	        },
	        {
	            "name": "AllDags",
	            "fields": [
	                {
	                    "rule": "repeated",
	                    "type": "Dag",
	                    "name": "dags",
	                    "id": 1
	                },
	                {
	                    "rule": "repeated",
	                    "type": "WorkerConfiguration",
	                    "name": "workers",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "include_unprocessed",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "include_file_saved",
	                    "id": 4
	                }
	            ]
	        }
	    ],
	    "enums": [
	        {
	            "name": "UIYadelRequestType",
	            "values": [
	                {
	                    "name": "REPORT_DAGS",
	                    "id": 0
	                },
	                {
	                    "name": "DELETE_DAG",
	                    "id": 1
	                },
	                {
	                    "name": "GET_DAG_STATUS",
	                    "id": 2
	                },
	                {
	                    "name": "REPORT_DAGS_ACTIVE",
	                    "id": 3
	                }
	            ]
	        },
	        {
	            "name": "UIWorkerState",
	            "values": [
	                {
	                    "name": "CURRENTLY_WORKING",
	                    "id": 0
	                },
	                {
	                    "name": "CURRENTLY_IDLE",
	                    "id": 1
	                }
	            ]
	        },
	        {
	            "name": "WorkerState",
	            "values": [
	                {
	                    "name": "WORKING",
	                    "id": 0
	                },
	                {
	                    "name": "IDLE",
	                    "id": 1
	                }
	            ]
	        },
	        {
	            "name": "WorkerToManagerMessageType",
	            "values": [
	                {
	                    "name": "REGISTRATION",
	                    "id": 0
	                }
	            ]
	        },
	        {
	            "name": "ManagerToManagerMessageType",
	            "values": [
	                {
	                    "name": "ENSURE_WORKERS_WORKING",
	                    "id": 0
	                }
	            ]
	        },
	        {
	            "name": "ActorRole",
	            "values": [
	                {
	                    "name": "MANAGER",
	                    "id": 0
	                },
	                {
	                    "name": "WORKER",
	                    "id": 1
	                }
	            ]
	        }
	    ]
	}).build();
	exports.YadelModel = _root;


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	/// <reference path="./YaasModel.d.ts" />
	var _root = dcodeIO.ProtoBuf.newBuilder({})['import']({
	    "package": "org.roylance.yaas",
	    "messages": [
	        {
	            "name": "UserDevice",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "UserDeviceType",
	                    "name": "user_device_type",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_device_token",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "last_updated",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "User",
	                    "name": "user",
	                    "id": 5
	                }
	            ]
	        },
	        {
	            "name": "Image",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "name",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "actual_image",
	                    "id": 3
	                }
	            ]
	        },
	        {
	            "name": "User",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_name",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "password",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "first_name",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "last_name",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "Image",
	                    "name": "image",
	                    "id": 7
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UserRole",
	                    "name": "roles",
	                    "id": 8
	                }
	            ]
	        },
	        {
	            "name": "Token",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "id",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_id",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "issued",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "int64",
	                    "name": "expiration",
	                    "id": 4
	                }
	            ]
	        },
	        {
	            "name": "UIAuthentication",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "authenticated",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "token",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_name",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "display",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_admin",
	                    "id": 5
	                }
	            ]
	        },
	        {
	            "name": "UIChangePassword",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "user_name",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "old_password",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "new_password",
	                    "id": 3
	                }
	            ]
	        },
	        {
	            "name": "UIYaasRequest",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "token",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "content",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "User",
	                    "name": "user",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "UserDevice",
	                    "name": "user_device",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "Image",
	                    "name": "image",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "offset",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "int32",
	                    "name": "limit",
	                    "id": 7
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIChangePassword",
	                    "name": "change_password",
	                    "id": 8
	                }
	            ]
	        },
	        {
	            "name": "UIYaasResponse",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "authenticated",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "error_message",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "successful",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "string",
	                    "name": "content",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "bool",
	                    "name": "is_admin",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIAuthentication",
	                    "name": "user",
	                    "id": 6
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIAuthentications",
	                    "name": "users",
	                    "id": 7
	                },
	                {
	                    "rule": "repeated",
	                    "type": "UserDevice",
	                    "name": "user_devices",
	                    "id": 8
	                }
	            ]
	        },
	        {
	            "name": "UIAuthentications",
	            "fields": [
	                {
	                    "rule": "repeated",
	                    "type": "UIAuthentication",
	                    "name": "users",
	                    "id": 1
	                }
	            ]
	        },
	        {
	            "name": "RequestAction",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "UIYaasRequest",
	                    "name": "request",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "UIYaasResponse",
	                    "name": "response",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "AdminController",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "change_password_for_user",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "get_all_users",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "is_user_admin",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "set_user_as_admin",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "remove_user_as_admin",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "delete_user",
	                    "id": 6
	                }
	            ]
	        },
	        {
	            "name": "AuthenticationController",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "exists",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "login",
	                    "id": 2
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "authenticate",
	                    "id": 3
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "register",
	                    "id": 4
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "change_password",
	                    "id": 5
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "save",
	                    "id": 6
	                }
	            ]
	        },
	        {
	            "name": "UserDeviceController",
	            "fields": [
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "save",
	                    "id": 1
	                },
	                {
	                    "rule": "optional",
	                    "type": "RequestAction",
	                    "name": "all",
	                    "id": 2
	                }
	            ]
	        }
	    ],
	    "enums": [
	        {
	            "name": "UserDeviceType",
	            "values": [
	                {
	                    "name": "ANDROID",
	                    "id": 0
	                },
	                {
	                    "name": "IOS",
	                    "id": 1
	                },
	                {
	                    "name": "JAVASCRIPT",
	                    "id": 2
	                }
	            ]
	        },
	        {
	            "name": "UserRole",
	            "values": [
	                {
	                    "name": "NORMAL",
	                    "id": 0
	                },
	                {
	                    "name": "ADMIN",
	                    "id": 1
	                }
	            ]
	        }
	    ]
	}).build();
	exports.YaasModel = _root;


/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";
	var MainService = (function () {
	    function MainService(httpExecute, modelFactory) {
	        this.httpExecute = httpExecute;
	        this.modelFactory = modelFactory;
	    }
	    MainService.prototype.get_accounts = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/get-accounts", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.save_accounts = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/save-accounts", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.delete_accounts = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/delete-accounts", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.get_employees = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/get-employees", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.save_employees = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/save-employees", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.delete_employees = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/delete-employees", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.get_jobs = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/get-jobs", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.save_jobs = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/save-jobs", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    MainService.prototype.delete_jobs = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/main/delete-jobs", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIBusinessManagerResponse.decode64(result));
	        }, onError);
	    };
	    return MainService;
	}());
	exports.MainService = MainService;


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";
	var ReportService = (function () {
	    function ReportService(httpExecute, modelFactory) {
	        this.httpExecute = httpExecute;
	        this.modelFactory = modelFactory;
	    }
	    ReportService.prototype.delete_dag = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/report/delete-dag", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYadelResponse.decode64(result));
	        }, onError);
	    };
	    ReportService.prototype.current = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/report/current", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYadelResponse.decode64(result));
	        }, onError);
	    };
	    ReportService.prototype.get_dag_status = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/report/get-dag-status", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYadelResponse.decode64(result));
	        }, onError);
	    };
	    return ReportService;
	}());
	exports.ReportService = ReportService;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	var AdminService = (function () {
	    function AdminService(httpExecute, modelFactory) {
	        this.httpExecute = httpExecute;
	        this.modelFactory = modelFactory;
	    }
	    AdminService.prototype.change_password_for_user = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/change-password-for-user", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AdminService.prototype.get_all_users = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/get-all-users", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AdminService.prototype.is_user_admin = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/is-user-admin", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AdminService.prototype.set_user_as_admin = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/set-user-as-admin", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AdminService.prototype.remove_user_as_admin = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/remove-user-as-admin", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AdminService.prototype.delete_user = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/admin/delete-user", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    return AdminService;
	}());
	exports.AdminService = AdminService;


/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	var AuthenticationService = (function () {
	    function AuthenticationService(httpExecute, modelFactory) {
	        this.httpExecute = httpExecute;
	        this.modelFactory = modelFactory;
	    }
	    AuthenticationService.prototype.exists = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/exists", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AuthenticationService.prototype.login = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/login", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AuthenticationService.prototype.authenticate = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/authenticate", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AuthenticationService.prototype.register = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/register", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AuthenticationService.prototype.change_password = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/change-password", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    AuthenticationService.prototype.save = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/authentication/save", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    return AuthenticationService;
	}());
	exports.AuthenticationService = AuthenticationService;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	var UserDeviceService = (function () {
	    function UserDeviceService(httpExecute, modelFactory) {
	        this.httpExecute = httpExecute;
	        this.modelFactory = modelFactory;
	    }
	    UserDeviceService.prototype.save = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/userdevice/save", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    UserDeviceService.prototype.all = function (request, onSuccess, onError) {
	        var self = this;
	        this.httpExecute.performPost("/rest/userdevice/all", request.toBase64(), function (result) {
	            onSuccess(self.modelFactory.UIYaasResponse.decode64(result));
	        }, onError);
	    };
	    return UserDeviceService;
	}());
	exports.UserDeviceService = UserDeviceService;


/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 15 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 16 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 17 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 18 */
/***/ function(module, exports) {

	"use strict";


/***/ },
/* 19 */
/***/ function(module, exports) {

	"use strict";


/***/ }
/******/ ]);