// This file was auto-generated, but can be altered. It will not be overwritten.
import org.roylance.yaclib.YaclibPackagePlugin;

buildscript {
    ext.kotlin_version = "$yaclib_kotlin"
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://dl.bintray.com/roylancemichael/maven'}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$yaclib_kotlin"
        classpath "org.roylance.yaclib:core:$yaclib_version"
    }
}

group "$group"
version "$major.$minor"

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8
mainClassName="com.revolutionlandscaping.businessmanager.Main"

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/roylancemichael/maven'}
    maven {
    url "https://roylance-repo.appspot.com"
    credentials {
        username System.getenv('STANDARD_MAVEN_USER')
        password System.getenv('STANDARD_MAVEN_PASSWORD')
    }
}
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile "org.eclipse.jetty:jetty-server:$yaclib_jetty"
    compile "org.eclipse.jetty:jetty-servlet:$yaclib_jetty"
    compile "org.eclipse.jetty:jetty-webapp:$yaclib_jetty"

    compile "org.glassfish.jersey.core:jersey-server:$yaclib_jersey"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$yaclib_jersey"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:$yaclib_jersey"
    compile "org.glassfish.jersey.media:jersey-media-multipart:$yaclib_jersey"

    compile "org.apache.httpcomponents:httpclient:$yaclib_http_components"

    compile "com.typesafe.akka:akka-cluster_2.11:$com_typesafe_akka_akka_cluster_"
    compile "mysql:mysql-connector-java:$mysql_mysql_connector_java"
    compile "org.roylance.yaorm:api:$org_roylance_yaorm_api"
    compile "org.roylance.yaas:yaorm:$org_roylance_yaas_yaorm"
    compile "com.squareup.retrofit2:converter-scalars:$com_squareup_retrofit__converter_scalars"
    compile "com.revolutionlandscaping.businessmanager:capi:$com_revolutionlandscaping_businessmanager_api"
    compile "org.roylance.yadel:capi:$org_roylance_yadel_api"
    compile "org.roylance.yaas:capi:$org_roylance_yaas_api"

}

task packageApp(type: YaclibPackagePlugin) {
    appName = rootProject.name
    serverVersion = "$major.$minor"
    maintainerInfo = "roylance.michael@gmail.com"
    serverPort = "$yaclib_server_port".toInteger()
}

packageApp.dependsOn(installDist)