// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: business_manager_model.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Revolutionlandscaping.Businessmanager {

  /// <summary>Holder for reflection information generated from business_manager_model.proto</summary>
  public static partial class BusinessManagerModelReflection {

    #region Descriptor
    /// <summary>File descriptor for business_manager_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BusinessManagerModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxidXNpbmVzc19tYW5hZ2VyX21vZGVsLnByb3RvEiljb20ucmV2b2x1dGlv",
            "bmxhbmRzY2FwaW5nLmJ1c2luZXNzbWFuYWdlciKGAQoHQWNjb3VudBIKCgJp",
            "ZBgBIAEoCRISCgpmaXJzdF9uYW1lGAIgASgJEhEKCWxhc3RfbmFtZRgDIAEo",
            "CRIPCgdhZGRyZXNzGAQgASgJEgwKBGNpdHkYBSABKAkSDQoFc3RhdGUYBiAB",
            "KAkSCwoDemlwGAcgASgJEg0KBXBob25lGAggASgJIlIKCEVtcGxveWVlEgoK",
            "AmlkGAEgASgJEhIKCmZpcnN0X25hbWUYAiABKAkSEQoJbGFzdF9uYW1lGAMg",
            "ASgJEhMKC2hvdXJseV9yYXRlGAQgASgBIoEBCgNKb2ISCgoCaWQYASABKAkS",
            "EgoKYWNjb3VudF9pZBgCIAEoCRIMCgRkYXRlGAMgASgJEhMKC2Rlc2NyaXB0",
            "aW9uGAQgASgJEhMKC2ZpeGVkX3ByaWNlGAUgASgBEhMKC2hvdXJseV9yYXRl",
            "GAYgASgBEg0KBWhvdXJzGAcgASgBIvUBChhVSUJ1c2luZXNzTWFuYWdlclJl",
            "cXVlc3QSDQoFdG9rZW4YASABKAkSRAoIYWNjb3VudHMYAiADKAsyMi5jb20u",
            "cmV2b2x1dGlvbmxhbmRzY2FwaW5nLmJ1c2luZXNzbWFuYWdlci5BY2NvdW50",
            "EkYKCWVtcGxveWVlcxgDIAMoCzIzLmNvbS5yZXZvbHV0aW9ubGFuZHNjYXBp",
            "bmcuYnVzaW5lc3NtYW5hZ2VyLkVtcGxveWVlEjwKBGpvYnMYBCADKAsyLi5j",
            "b20ucmV2b2x1dGlvbmxhbmRzY2FwaW5nLmJ1c2luZXNzbWFuYWdlci5Kb2Ii",
            "5wEKGVVJQnVzaW5lc3NNYW5hZ2VyUmVzcG9uc2USRAoIYWNjb3VudHMYASAD",
            "KAsyMi5jb20ucmV2b2x1dGlvbmxhbmRzY2FwaW5nLmJ1c2luZXNzbWFuYWdl",
            "ci5BY2NvdW50EkYKCWVtcGxveWVlcxgCIAMoCzIzLmNvbS5yZXZvbHV0aW9u",
            "bGFuZHNjYXBpbmcuYnVzaW5lc3NtYW5hZ2VyLkVtcGxveWVlEjwKBGpvYnMY",
            "AyADKAsyLi5jb20ucmV2b2x1dGlvbmxhbmRzY2FwaW5nLmJ1c2luZXNzbWFu",
            "YWdlci5Kb2JiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Revolutionlandscaping.Businessmanager.Account), global::Com.Revolutionlandscaping.Businessmanager.Account.Parser, new[]{ "Id", "FirstName", "LastName", "Address", "City", "State", "Zip", "Phone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Revolutionlandscaping.Businessmanager.Employee), global::Com.Revolutionlandscaping.Businessmanager.Employee.Parser, new[]{ "Id", "FirstName", "LastName", "HourlyRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Revolutionlandscaping.Businessmanager.Job), global::Com.Revolutionlandscaping.Businessmanager.Job.Parser, new[]{ "Id", "AccountId", "Date", "Description", "FixedPrice", "HourlyRate", "Hours" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Revolutionlandscaping.Businessmanager.UIBusinessManagerRequest), global::Com.Revolutionlandscaping.Businessmanager.UIBusinessManagerRequest.Parser, new[]{ "Token", "Accounts", "Employees", "Jobs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Revolutionlandscaping.Businessmanager.UIBusinessManagerResponse), global::Com.Revolutionlandscaping.Businessmanager.UIBusinessManagerResponse.Parser, new[]{ "Accounts", "Employees", "Jobs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Revolutionlandscaping.Businessmanager.BusinessManagerModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      address_ = other.address_;
      city_ = other.city_;
      state_ = other.state_;
      zip_ = other.zip_;
      phone_ = other.phone_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 5;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zip" field.</summary>
    public const int ZipFieldNumber = 7;
    private string zip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zip {
      get { return zip_; }
      set {
        zip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 8;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Address != other.Address) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (Zip != other.Zip) return false;
      if (Phone != other.Phone) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (Zip.Length != 0) hash ^= Zip.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (City.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(City);
      }
      if (State.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(State);
      }
      if (Zip.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Zip);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Phone);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (Zip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zip);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.Zip.Length != 0) {
        Zip = other.Zip;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            City = input.ReadString();
            break;
          }
          case 50: {
            State = input.ReadString();
            break;
          }
          case 58: {
            Zip = input.ReadString();
            break;
          }
          case 66: {
            Phone = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Employee : pb::IMessage<Employee> {
    private static readonly pb::MessageParser<Employee> _parser = new pb::MessageParser<Employee>(() => new Employee());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Employee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Revolutionlandscaping.Businessmanager.BusinessManagerModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee(Employee other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      hourlyRate_ = other.hourlyRate_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Employee Clone() {
      return new Employee(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hourly_rate" field.</summary>
    public const int HourlyRateFieldNumber = 4;
    private double hourlyRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HourlyRate {
      get { return hourlyRate_; }
      set {
        hourlyRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Employee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Employee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (HourlyRate != other.HourlyRate) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (HourlyRate != 0D) hash ^= HourlyRate.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (HourlyRate != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HourlyRate);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (HourlyRate != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Employee other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.HourlyRate != 0D) {
        HourlyRate = other.HourlyRate;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 33: {
            HourlyRate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Job : pb::IMessage<Job> {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Revolutionlandscaping.Businessmanager.BusinessManagerModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job(Job other) : this() {
      id_ = other.id_;
      accountId_ = other.accountId_;
      date_ = other.date_;
      description_ = other.description_;
      fixedPrice_ = other.fixedPrice_;
      hourlyRate_ = other.hourlyRate_;
      hours_ = other.hours_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private string accountId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 3;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_price" field.</summary>
    public const int FixedPriceFieldNumber = 5;
    private double fixedPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FixedPrice {
      get { return fixedPrice_; }
      set {
        fixedPrice_ = value;
      }
    }

    /// <summary>Field number for the "hourly_rate" field.</summary>
    public const int HourlyRateFieldNumber = 6;
    private double hourlyRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double HourlyRate {
      get { return hourlyRate_; }
      set {
        hourlyRate_ = value;
      }
    }

    /// <summary>Field number for the "hours" field.</summary>
    public const int HoursFieldNumber = 7;
    private double hours_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Hours {
      get { return hours_; }
      set {
        hours_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AccountId != other.AccountId) return false;
      if (Date != other.Date) return false;
      if (Description != other.Description) return false;
      if (FixedPrice != other.FixedPrice) return false;
      if (HourlyRate != other.HourlyRate) return false;
      if (Hours != other.Hours) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (FixedPrice != 0D) hash ^= FixedPrice.GetHashCode();
      if (HourlyRate != 0D) hash ^= HourlyRate.GetHashCode();
      if (Hours != 0D) hash ^= Hours.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountId);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Date);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (FixedPrice != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(FixedPrice);
      }
      if (HourlyRate != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(HourlyRate);
      }
      if (Hours != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Hours);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (FixedPrice != 0D) {
        size += 1 + 8;
      }
      if (HourlyRate != 0D) {
        size += 1 + 8;
      }
      if (Hours != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.FixedPrice != 0D) {
        FixedPrice = other.FixedPrice;
      }
      if (other.HourlyRate != 0D) {
        HourlyRate = other.HourlyRate;
      }
      if (other.Hours != 0D) {
        Hours = other.Hours;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AccountId = input.ReadString();
            break;
          }
          case 26: {
            Date = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 41: {
            FixedPrice = input.ReadDouble();
            break;
          }
          case 49: {
            HourlyRate = input.ReadDouble();
            break;
          }
          case 57: {
            Hours = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UIBusinessManagerRequest : pb::IMessage<UIBusinessManagerRequest> {
    private static readonly pb::MessageParser<UIBusinessManagerRequest> _parser = new pb::MessageParser<UIBusinessManagerRequest>(() => new UIBusinessManagerRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UIBusinessManagerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Revolutionlandscaping.Businessmanager.BusinessManagerModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerRequest(UIBusinessManagerRequest other) : this() {
      token_ = other.token_;
      accounts_ = other.accounts_.Clone();
      employees_ = other.employees_.Clone();
      jobs_ = other.jobs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerRequest Clone() {
      return new UIBusinessManagerRequest(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Revolutionlandscaping.Businessmanager.Account.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account> accounts_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account> Accounts {
      get { return accounts_; }
    }

    /// <summary>Field number for the "employees" field.</summary>
    public const int EmployeesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Employee> _repeated_employees_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Revolutionlandscaping.Businessmanager.Employee.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee> employees_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee> Employees {
      get { return employees_; }
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Revolutionlandscaping.Businessmanager.Job.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job> jobs_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job> Jobs {
      get { return jobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UIBusinessManagerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UIBusinessManagerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      if(!employees_.Equals(other.employees_)) return false;
      if(!jobs_.Equals(other.jobs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= accounts_.GetHashCode();
      hash ^= employees_.GetHashCode();
      hash ^= jobs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
      employees_.WriteTo(output, _repeated_employees_codec);
      jobs_.WriteTo(output, _repeated_jobs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      size += employees_.CalculateSize(_repeated_employees_codec);
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UIBusinessManagerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      accounts_.Add(other.accounts_);
      employees_.Add(other.employees_);
      jobs_.Add(other.jobs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
          case 26: {
            employees_.AddEntriesFrom(input, _repeated_employees_codec);
            break;
          }
          case 34: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UIBusinessManagerResponse : pb::IMessage<UIBusinessManagerResponse> {
    private static readonly pb::MessageParser<UIBusinessManagerResponse> _parser = new pb::MessageParser<UIBusinessManagerResponse>(() => new UIBusinessManagerResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UIBusinessManagerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Revolutionlandscaping.Businessmanager.BusinessManagerModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerResponse(UIBusinessManagerResponse other) : this() {
      accounts_ = other.accounts_.Clone();
      employees_ = other.employees_.Clone();
      jobs_ = other.jobs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UIBusinessManagerResponse Clone() {
      return new UIBusinessManagerResponse(this);
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Revolutionlandscaping.Businessmanager.Account.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account> accounts_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Account> Accounts {
      get { return accounts_; }
    }

    /// <summary>Field number for the "employees" field.</summary>
    public const int EmployeesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Employee> _repeated_employees_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Revolutionlandscaping.Businessmanager.Employee.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee> employees_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Employee> Employees {
      get { return employees_; }
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Revolutionlandscaping.Businessmanager.Job> _repeated_jobs_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Revolutionlandscaping.Businessmanager.Job.Parser);
    private readonly pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job> jobs_ = new pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Revolutionlandscaping.Businessmanager.Job> Jobs {
      get { return jobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UIBusinessManagerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UIBusinessManagerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accounts_.Equals(other.accounts_)) return false;
      if(!employees_.Equals(other.employees_)) return false;
      if(!jobs_.Equals(other.jobs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accounts_.GetHashCode();
      hash ^= employees_.GetHashCode();
      hash ^= jobs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      accounts_.WriteTo(output, _repeated_accounts_codec);
      employees_.WriteTo(output, _repeated_employees_codec);
      jobs_.WriteTo(output, _repeated_jobs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      size += employees_.CalculateSize(_repeated_employees_codec);
      size += jobs_.CalculateSize(_repeated_jobs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UIBusinessManagerResponse other) {
      if (other == null) {
        return;
      }
      accounts_.Add(other.accounts_);
      employees_.Add(other.employees_);
      jobs_.Add(other.jobs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
          case 18: {
            employees_.AddEntriesFrom(input, _repeated_employees_codec);
            break;
          }
          case 26: {
            jobs_.AddEntriesFrom(input, _repeated_jobs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
